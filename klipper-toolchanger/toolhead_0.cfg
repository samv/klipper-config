
[mcu head0]
# first toolhead, Dragon SF
canbus_uuid: 55dafc28c962


#####################################################################
#   Extruder
#####################################################################

[board_pins head0]
mcu: head0
aliases:
  ADXL_CS=PB12, ADXL_SCLK=PB10, ADXL_MISO=PB2, ADXL_MOSI=PB11,
  # TMC2209
  M1_STEP=PD0, M1_DIR=PD1, M1_EN=PD2, M1_UART=PA15,
  H0=PB13,
  MAX31865_CS=PA4, MAX31865_SCLK=PA5, MAX31865_MISO=PA6, MAX31865_MOSI=PA7,
  FAN0=PA0, FAN1=PA1,
  BLT_SENSOR=PB8, BLT_CTL=PB9,
  RGB=PD3,

[extruder]
step_pin: head0:M1_STEP
dir_pin: head0:M1_DIR
enable_pin: !head0:M1_EN
full_steps_per_rotation: 200   # 1.8° for BondTech stepper motor
rotation_distance: 22.56                                            # See calibrating rotation_distance on extruders doc
gear_ratio: 40:10                                                   # For Mini Afterburner
microsteps: 32
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: head0:H0
## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
## Use "Generic 3950" for NTC 100k 3950 thermistors
sensor_type: MAX31865
sensor_pin: head0:MAX31865_CS
spi_software_sclk_pin: head0:MAX31865_SCLK
spi_software_miso_pin: head0:MAX31865_MISO
spi_software_mosi_pin: head0:MAX31865_MOSI
control: pid

# calibrate_pid -> 18.367, 0.995, 84.721
# PID_CALIBRATE result: pid_Kp=19.479 pid_Ki=1.007 pid_Kd=94.232
# manual result: pid_Kp=19.479 pid_Ki=1.007 pid_Kd=94.232

# n.b., PID_BASE is lowered to 100 so these are expressed as percentages, apart
# from Ki which is expressed in basis points (%'s of a %, or 1/10,000's)
# to convert to stock, multiply by 2.55 (0.0255 for Ki)
pid_kp: 18.367    # per-255 of power per degree of delta to target temperature
#pid_ki: 0.503    # basis points of power to add per degree·s of cumulative deltas to target.
pid_ki: 1.007    # basis points of power to add per degree·s of cumulative deltas to target.
pid_kd: 84.721   # % of power to subtract per degree/s of current temp. change.
                 # kd Values above 100/(maximum absolute degree/s change when heating/cooling) may result in erratic behavior.
pwm_adjust_early_min: 0.01  # change output more nimbly
pwm_adjust_max_hz: 1   #  set between 0.27Hz and 3.33Hz; default 0.5

# manually determined values
# pid_kp: 7.84
# pid_ki: 15.625
# pid_kd: 31.37

min_temp: 0
max_temp: 320
min_extrude_temp: 50
#min_extrude_temp: 150
max_extrude_only_distance: 150
max_extrude_cross_section: 1.0   #  ??
pressure_advance: 0.02                                               # See tuning pressure advance doc
pressure_advance_smooth_time: 0.040

[adxl345]
cs_pin: head0:ADXL_CS
spi_software_sclk_pin: head0:ADXL_SCLK
spi_software_mosi_pin: head0:ADXL_MOSI
spi_software_miso_pin: head0:ADXL_MISO

[resonance_tester]
accel_chip: adxl345
probe_points: 60, 58, 20  # an example

[tmc2209 extruder]
uart_pin: head0:M1_UART
#tx_pin: gpio8
#uart_address: 3
interpolate: False
# BondTech 36H020H-1004A-001 pancake stepper
#run_current: 0.7
run_current: 0.5
## For OMC (StepperOnline) 14HR07-1004VRN 1A 0.9°
#run_current: 0.5 # for OMC 14HR07-1004VRN rated at 1A
## For LDO LDO 36STH17-1004AHG 1A 1.8° 
#run_current: 0.3 # for LDO 36STH17-1004AHG
## For LDO LDO 36STH20-1004AHG 1A 1.8° 
#run_current: 0.6 # for LDO 36STH20-1004AHG
sense_resistor: 0.110
stealthchop_threshold: 0                                            # Set to 0 for spreadcycle, avoid using stealthchop on extruder

#####################################################################
# Fan Control
#####################################################################

[heater_fan T0_extruder_fan]
pin: head0:FAN0
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 70.0
#fan_speed: 1.0                                                     # You can't PWM the delta fan unless using blue wire

[multi_fan T0_partfan]
pin: head0:FAN1
max_power: 1.0
kick_start_time: 0.5                                                # Depending on your fan, you may need to increase this value if your fan will not start
off_below: 0.13
cycle_time: 0.010

# embedded temperature sensor
[temperature_sensor head0_mcu_temp]
sensor_type: temperature_mcu
sensor_mcu: head0
min_temp: 0
max_temp: 100

#####################################################################
# TOOLCHANGING AND PROBING
#####################################################################
[gcode_macro T0]
variable_color: ""
gcode:
    # Activate T0
    SELECT_TOOL T=0

[tool T0]
tool_number: 0
extruder: extruder
fan: multi_fan T0_partfan
gcode_x_offset: 16
gcode_y_offset: 1.5
gcode_z_offset: 4
params_park_x: 0
params_detach_x: 6

[tool_probe T0]
pin: head0:PB8
tool: 0
# if the tool is too close after CALIBRATE_Z_OFFSET and G0Z0, decrease this number (move further below zero)
# if the tool is not touching the bed, increase this number (move further towards zero).  Should never be positive.
z_offset: -0.575
speed: 1
lift_speed: 2.5
sample_retract_dist: 1.5
samples: 5
samples_result: median
samples_tolerance: 0.01
samples_tolerance_retries: 7
activate_gcode:
    _TAP_PROBE_ACTIVATE HEATER=extruder


#####################################################################
# LEDS
#####################################################################
[neopixel head0_leds]
pin: head0:RGB
chain_count: 3
color_order: GRBW
initial_RED: 0.5
initial_GREEN: 0.2
initial_BLUE: 0.48
initial_WHITE: 1.0

[gcode_macro _head0_vars]
# User settings for the MadMax status leds. You can change the status colors and led
# configurations for the logo and nozzle here.
variable_colors: {
        'logo': { # Colors for logo states
            'busy': {'r': 0.4, 'g': 0.0, 'b': 0.0, 'w': 0.0},
            'cleaning': {'r': 0.0, 'g': 0.02, 'b': 0.5, 'w': 0.0},
            'calibrating_z': {'r': 0.8, 'g': 0., 'b': 0.35, 'w': 0.0},
            'heating': {'r': 0.3, 'g': 0.18, 'b': 0.0, 'w': 0.0},
            'homing': {'r': 0.0, 'g': 0.6, 'b': 0.2, 'w': 0.0},
            'leveling': {'r': 0.5, 'g': 0.1, 'b': 0.4, 'w': 0.0},
            'meshing': {'r': 0.2, 'g': 1.0, 'b': 0.0, 'w': 0.0},
            'off': {'r': 0.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},
            'printing': {'r': 1.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},
            'standby': {'r': 0.01, 'g': 0.01, 'b': 0.01, 'w': 0.1},
        },
        'nozzle': { # Colors for nozzle states
            'heating': {'r': 0.8, 'g': 0.35, 'b': 0.0, 'w':0.0},
            'off': {'r': 0.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},
            'on': {'r': 0.8, 'g': 0.8, 'b': 0.8, 'w':1.0},
            'standby': {'r': 0.6, 'g': 0.0, 'b': 0.0, 'w':0.0},
        },
        'thermal': {
            'hot': {'r': 1.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},
            'cold': {'r': 0.3, 'g': 0.0, 'b': 0.3, 'w': 0.0}
        }
    }

variable_logo_led_name:         "head0_leds" 
# The name of the addressable LED chain that contains the logo LED(s)
variable_logo_idx:              "1" 
# A comma-separated list of indexes LEDs in the logo
variable_nozzle_led_name:       "head0_leds"
# The name of the addressable LED chain that contains the nozzle LED(s). This will
# typically be the same LED chain as the logo.
variable_nozzle_idx:            "2,3"
# A comma-separated list of indexes of LEDs in the nozzle

variable_thermal_config: {
        'extruder': {
            'cool_temp': 40,
            'leds': 'logo',
        },
        'heater_bed': {
            'cool_temp': 40,
            'leds': 'nozzle',
        },
    }
# temperatures at which cooling will be considered complete

gcode:
    ; Do nothing

[gcode_macro _set_head0_leds]
gcode:
    {% set red = params.RED|default(0)|float %}
    {% set green = params.GREEN|default(0)|float %}
    {% set blue = params.BLUE|default(0)|float %}
    {% set white = params.WHITE|default(0)|float %}
    {% set led = params.LED|string %}
    {% set idx = (params.IDX|string).split(',') %}
    {% set transmit_last = params.TRANSMIT|default(1) %}
    
    {% for led_index in idx %}
        {% set transmit=transmit_last if loop.last else 0 %}
        RESPOND type=echo msg="set_led led={led} red={red} green={green} blue={blue} white={white} index={led_index} transmit={transmit}"
        set_led led={led} red={red} green={green} blue={blue} white={white} index={led_index} transmit={transmit}
    {% endfor %}

[gcode_macro _set_head0_leds_by_name]
gcode:
    {% set leds_name = params.LEDS %}
    {% set color_name = params.COLOR %}
    {% set color = printer["gcode_macro _head0_vars"].colors[leds_name][color_name] %}
    {% set led = printer["gcode_macro _head0_vars"][leds_name + "_led_name"] %}
    {% set idx = printer["gcode_macro _head0_vars"][leds_name + "_idx"] %}
    {% set transmit = params.TRANSMIT|default(1) %}

    _set_head0_leds led={led} red={color.r} green={color.g} blue={color.b} white={color.w} idx="{idx}" transmit={transmit}

[gcode_macro _set_head0_logo_leds]
gcode:
    {% set red = params.RED|default(0)|float %}
    {% set green = params.GREEN|default(0)|float %}
    {% set blue = params.BLUE|default(0)|float %}
    {% set white = params.WHITE|default(0)|float %}
    {% set led = printer["gcode_macro _head0_vars"].logo_led_name %}
    {% set idx = printer["gcode_macro _head0_vars"].logo_idx %}
    {% set transmit=params.TRANSMIT|default(1) %}

    _set_head0_leds led={led} red={red} green={green} blue={blue} white={white} idx="{idx}" transmit={transmit}

[gcode_macro _set_head0_nozzle_leds]
gcode:
    {% set red = params.RED|default(0)|float %}
    {% set green = params.GREEN|default(0)|float %}
    {% set blue = params.BLUE|default(0)|float %}
    {% set white = params.WHITE|default(0)|float %}
    {% set led = printer["gcode_macro _head0_vars"].nozzle_led_name %}
    {% set idx = printer["gcode_macro _head0_vars"].nozzle_idx %}
    {% set transmit=params.TRANSMIT|default(1) %}

    _set_head0_leds led={led} red={red} green={green} blue={blue} white={white} idx="{idx}" transmit={transmit}

[gcode_macro set_head0_logo_leds_off]
gcode:
    {% set transmit=params.TRANSMIT|default(1) %}
    _set_head0_logo_leds red=0 blue=0 green=0 white=0 transmit={transmit}

[gcode_macro set_head0_nozzle_leds_on]
gcode:
    {% set transmit=params.TRANSMIT|default(1) %}
    _set_head0_leds_by_name leds="nozzle" color="on" transmit={transmit}

[gcode_macro set_head0_nozzle_leds_off]
gcode:
    {% set transmit=params.TRANSMIT|default(1) %}
    _set_head0_leds_by_name leds="nozzle" color="off" transmit={transmit}

[gcode_macro head0_status_off]
gcode:
    set_head0_logo_leds_off transmit=0
    set_head0_nozzle_leds_off

[gcode_macro head0_status_ready]
gcode:
    _set_head0_leds_by_name leds="logo" color="standby" transmit=0
    _set_head0_leds_by_name leds="nozzle" color="standby" transmit=1

[gcode_macro head0_status_busy]
gcode:
    _set_head0_leds_by_name leds="logo" color="busy" transmit=0
    set_head0_nozzle_leds_on

[gcode_macro head0_status_heating]
gcode:
    _set_head0_leds_by_name leds="logo" color="heating" transmit=0
    _set_head0_leds_by_name leds="nozzle" color="heating" transmit=1

[gcode_macro head0_status_leveling]
gcode:
    _set_head0_leds_by_name leds="logo" color="leveling" transmit=0
    set_head0_nozzle_leds_on

[gcode_macro head0_status_homing]
gcode:
    _set_head0_leds_by_name leds="logo" color="homing" transmit=0
    set_head0_nozzle_leds_on

[gcode_macro head0_status_cleaning]
gcode:
    _set_head0_leds_by_name leds="logo" color="cleaning" transmit=0
    set_head0_nozzle_leds_on

[gcode_macro head0_status_meshing]
gcode:
    _set_head0_leds_by_name leds="logo" color="meshing" transmit=0
    set_head0_nozzle_leds_on

[gcode_macro head0_status_calibrating_z]
gcode:
    _set_head0_leds_by_name leds="logo" color="calibrating_z" transmit=0
    set_head0_nozzle_leds_on

[gcode_macro head0_status_printing]
gcode:
    _set_head0_leds_by_name leds="logo" color="printing" transmit=0
    set_head0_nozzle_leds_on

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*#
#*# [stepper_z]

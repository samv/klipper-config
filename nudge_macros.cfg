#####################################################################
#  
#  File: nudge_macros.cfg
#  Version: 1.0
#  Last modification date: February 11, 2025
#  Last modified by: Sam Vilain
#
#  License: GNU GENERAL PUBLIC LICENSE Version 3, 29 June 2007
#
#####################################################################
#
#  This file contains the [tool_calibrate] definitions and macros
#  used with Nudge by zruncho
#
#  github: https://github.com/zruncho3d/nudge
#
#  Configuration sections within this file:
#
#      [tools_calibrate]
#
#  Macros within this file:
#
#    USE_KINEMATIC_GRID
#    USE_HOMING_GRID
#    USE_NUDGE_GRID
#    NUDGE_GET_PROBE_POSITION
#    NUDGE_FIND_TOOL_OFFSETS
#    NUDGE_MOVE_OVER_PROBE
#    _NUDGE_SAVE_PROBE_POSITION
#    _NUDGE_FIND_TOOL_OFFSET
#    _NUDGE_UPDATE_OFFSETS
#    NUDGE_TOOL_OFFSET
#    NUDGE_TOOL_OFFSETS
#    PRINT_TC
#    PRINT_TC_TOOL
#    NUDGE_PRINT_OFFSETS
#    NUDGE_PRINT_PROBE_RESULTS
#    NUDGE_PRINT_ADJUSTMENTS
#
#####################################################################

#####################################################################
#   USE_KINEMATIC_GRID
#####################################################################
[gcode_macro USE_KINEMATIC_GRID]
description: Make the X, Y and Z co–ordinates relative to the kinematic grid.
gcode:
    {% set report = (params.QUIET | default(0)) == 0 %}
    {% set offsets = printer.gcode_move.homing_origin %}
    {% if offsets.x != 0 or offsets.y != 0 or offsets.z != 0 %}
      {% if report %}
        RESPOND TYPE=echo MSG='Using kinematic grid; offsets X=0 Y=0 Z=0'
      {% endif %}
      SET_GCODE_OFFSET X=0 Y=0 Z=0
    {% endif %}

#####################################################################
#   USE_HOMING_GRID
#####################################################################
[gcode_macro USE_HOMING_GRID]
description: Use the X, Y and Z co–ordinates of the print area with probed Z (if Z has been probed) but without nudge corrections
gcode:
    {% set tool_number = printer.tool_probe_endstop.active_tool_number %}
    {% set tool = printer.toolchanger.tool %}
    {% set report = (params.QUIET | default(0)) == 0 %}
    {% set probe_vars = printer["gcode_macro CALIBRATE_Z_OFFSET"] %}
    {% set tN = "t" + (tool_number|string) %}
    {% if tool_number >= 0 %}
      {% set offset_x = printer[tool].gcode_x_offset |default(0) |float%}
      {% set offset_y = printer[tool].gcode_y_offset |default(0) |float%}
      {% set offset_z = probe_vars[tN+"_probed_z"] %}
      {% if offset_z == 0 %}
        {% set probed_tool = -1 %}
        {% set tool_correction = 0 %}
        {% for probe_tool in [0, 1] %}
          {% set probe_tN = "t" + (probe_tool|string) %}
          {% if probe_vars[probe_tN + "_probed_z"] != 0 %}
            {% set probed_tool = probe_tool %}
            {% set tool_correction = (probe_vars[probe_tN + "_probed_z"] - printer["tool T"+probe_tool].gcode_z_offset) %}
          {% endif %}
        {% endfor %}
        {% if probed_tool >= 0 %}
            RESPOND TYPE=echo MSG="tool {probe_tool} probed; applying Z correction of {tool_correction}"
        {% endif %}
        {% set offset_z = tool_correction + (printer[tool].gcode_z_offset | default(0)) | float %}
      {% endif %}
      {% set offsets = printer.gcode_move.homing_origin %}
      {% if offsets.x != offset_x or offsets.y != offset_y or offsets.z != offset_z %}
        SET_GCODE_OFFSET X={offset_x} Y={offset_y} Z={offset_z}
        {% if report %}
          RESPOND TYPE=echo MSG='Using Homing grid for "{tool}"; X={offset_x} Y={offset_y} Z={offset_z}'
        {% endif %}
      {% endif %}
    {% else %}
      USE_KINEMATIC_GRID QUIET={ 0 if report else 1 }
      {% if report %}
        RESPOND TYPE=error MSG='No tool; fell back to kinematic grid'
      {% endif %}
    {% endif %}

#####################################################################
#   USE_NUDGE_GRID
#####################################################################
[gcode_macro USE_NUDGE_GRID]
description: Use the X, Y and Z co–ordinates with all available fine corrections applied
gcode:
    {% set tool_number = printer.tool_probe_endstop.active_tool_number %}
    {% set tool = printer.toolchanger.tool %}
    {% set svf = printer.save_variables.variables %}
    {% set report = (params.QUIET | default(0)) == 0 %}
    {% if tool_number >= 0 %}
      {% set tN = "t" + (tool_number | string) %}
      {% set adjust_x = svf[tN + "_offset_x"]|default(0) %}
      {% set adjust_y = svf[tN + "_offset_y"]|default(0) %}
      {% set adjust_z = svf[tN + "_offset_z"]|default(0) %}
      {% if adjust_x != 0 or adjust_y != 0 or adjust_z != 0 %}
        {% set offset_x = adjust_x + (printer[tool].gcode_x_offset|float) %}
        {% set offset_y = adjust_q + (printer[tool].gcode_y_offset|float) %}
        {% set offset_z = adjust_z + (printer[tool].probed_z_offset | default(printer[tool].gcode_z_offset|float)) %}
        {% set offsets = printer.gcode_move.homing_origin %}
        {% if offsets.x != offset_x or offsets.y != offset_y or offsets.z != offset_z %}
          SET_GCODE_OFFSET X={offset_x} Y={offset_y} Z={offset_z}
          {% if report %}
            RESPOND TYPE=echo MSG='Using Nudge grid for "{tool}"; X={offset_x} Y={offset_y} Z={offset_z}'
          {% endif %}
        {% endif %}
      {% else %}
        USE_HOMING_GRID QUIET={ 0 if report else 1 }
        {% if report %}
          RESPOND TYPE=error MSG="No nudge offsets found; falling back to Homing grid"
        {% endif %}
      {% endif %}
    {% else %}
      USE_KINEMATIC_GRID QUIET={ 0 if report else 1 }
      {% if report %}
        RESPOND TYPE=error MSG='No tool; fell back to kinematic grid'
      {% endif %}
    {% endif %}

#####################################################################
#   NUDGE_GET_PROBE_POSITION
#####################################################################
[gcode_macro NUDGE_GET_PROBE_POSITION]
variable_nudge_position_x: 0
variable_nudge_position_y: 0
variable_nudge_position_z: 0
description: Locate the coordinates of the sensor and save to disk. Position tool over nudge probe and run this command.
gcode:
  USE_KINEMATIC_GRID QUIET=1
  TOOL_LOCATE_SENSOR
  _NUDGE_SAVE_PROBE_POSITION

[save_variables]
filename: ~/printer_data/config/klipper-toolchanger/offsets.cfg

#####################################################################
#   NUDGE_FIND_TOOL_OFFSETS
#####################################################################
[gcode_macro NUDGE_FIND_TOOL_OFFSETS]
description: Calibrates the offsets between T0 and T1
gcode:
    {% set svf = printer.save_variables.variables %}
    RESPOND MSG="X: {svf.t1_offset_x}  Y: {svf.t1_offset_y} Z: {svf.t1_offset_z}"
    RESPOND MSG="Current offsets set to:"
    # Make sure we are starting with the reference tool
    T{svf.nudge_position_tool}
    # Warm up the hot ends to normal probing temperatures
    M104 T1 S180
    M109 T0 S180
    # If not homed, home the printer
    SMART_HOME
    # Verify the location of nudge
    _NUDGE_FIND_TOOL_OFFSET
    # Activate T1
    T1
    # Make sure T1 is at temp
    M109 T1 S180
    # Make sure T1 is over the probe
    NUDGE_MOVE_OVER_PROBE
    # Calibrate the offset
    TOOL_CALIBRATE_TOOL_OFFSET
    # Update and save tool offsets
    _NUDGE_UPDATE_OFFSETS

    {% if printer.idle_timeout.state != "Printing" %}
      # Move to the center of the bed and switch to T0
      G0 X{printer.configfile.config.stepper_x.position_max|float / 2} Y{printer.configfile.config.stepper_y.position_max|float / 2} F9000
      T0
      # Cool off both hot ends
      M104 S0 T0
      M104 S0 T1
    {% else %}
      # Just switch back to T0 and let the calling macro take control
      T0
    {% endif %}

#####################################################################
#   NUDGE_MOVE_OVER_PROBE
#####################################################################
[gcode_macro NUDGE_MOVE_OVER_PROBE]
description: Move tool head to probing position.  Sets grid to kinematic.
gcode:
  {% set svf = printer.save_variables.variables %}
  {% set get_probe = printer["gcode_macro NUDGE_GET_PROBE_POSITION"] %}
  {% set tool = printer.toolchanger.tool %}
  {% set tool_number = printer.tool_probe_endstop.active_tool_number %}

  # Pull Nudge location from the macro, preferably
  {% set nudge_x = (get_probe.nudge_position_x | float) or (svf.nudge_position_x | default(0) | float) %}
  {% set nudge_y = (get_probe.nudge_position_y | float) or (svf.nudge_position_y | default(0) | float) %}
  {% set nudge_z = (get_probe.nudge_position_z | float) or (svf.nudge_position_z | default(0) | float) %}

  {% if tool_number < 0 %}
    REPORT type=error MSG="no active tool, cannot move over nudge probe"
  {% elif nudge_x == 0 and nudge_y == 0 and nudge_z == 0 %}
    REPORT type=error MSG="no nudge position stored; move over nudge probe and run NUDGE_GET_PROBE_POSITION"
  {% else %}
    {% if tool_number != (svf.nudge_position_tool) %}
       # correct position using gcode offset differences
       {% set position_tool = "tool T" + (svf.nudge_position_tool) %}
       {% set nudge_x = nudge_x + printer[tool].gcode_x_offset - printer[position_tool].gcode_x_offset %}
       {% set nudge_y = nudge_y + printer[tool].gcode_y_offset - printer[position_tool].gcode_y_offset %}
       {% set nudge_z = nudge_z + printer[tool].gcode_z_offset - printer[position_tool].gcode_z_offset %}
       REPORT type=info msg="applied GCode offsets for {tool}"
    {% endif %}
    USE_KINEMATIC_GRID
    G0 X{nudge_x} Y{nudge_y} Z{nudge_z+1} F9000
  {% endif %}

#####################################################################
#   _NUDGE_SAVE_PROBE_POSITION
#####################################################################
[gcode_macro _NUDGE_SAVE_PROBE_POSITION]
description: Update the nudge position from the last probe sequence.  Call with Kinematic grid active.
gcode:
    {% set svf = printer.save_variables.variables %}
    {% set tool_number = printer.tool_probe_endstop.active_tool_number %}
    {% set nudge_x = printer.tools_calibrate.last_x_result|float|round(3) %}
    {% set nudge_y = printer.tools_calibrate.last_y_result|float|round(3) %}
    {% set nudge_z = printer.tools_calibrate.last_z_result|float|round(3) %}
    # Update the variables that hold the offsets
    SAVE_VARIABLE VARIABLE=nudge_position_x VALUE={nudge_x}
    SET_GCODE_VARIABLE MACRO="NUDGE_GET_PROBE_POSITION" VARIABLE=nudge_position_x VALUE={nudge_x}
    SAVE_VARIABLE VARIABLE=nudge_position_y VALUE={nudge_y}
    SET_GCODE_VARIABLE MACRO="NUDGE_GET_PROBE_POSITION" VARIABLE=nudge_position_y VALUE={nudge_y}
    SAVE_VARIABLE VARIABLE=nudge_position_z VALUE={nudge_z}
    SET_GCODE_VARIABLE MACRO="NUDGE_GET_PROBE_POSITION" VARIABLE=nudge_position_z VALUE={nudge_z}
    SAVE_VARIABLE VARIABLE=nudge_position_tool VALUE={tool_number}
    # Notify the user that the coordinates have been saved.
    RESPOND MSG="X{nudge_x} Y{nudge_y} Z{nudge_z}"
    RESPOND MSG="Nudge coordinates saved as:"

#####################################################################
#   _NUDGE_FIND_TOOL_OFFSET
#####################################################################
[gcode_macro _NUDGE_FIND_TOOL_OFFSET]
description: Find the location of the probe for the tool head.
gcode:
  NUDGE_MOVE_OVER_PROBE
  TOOL_LOCATE_SENSOR

#####################################################################
#   _NUDGE_UPDATE_OFFSETS
#####################################################################
[gcode_macro _NUDGE_UPDATE_OFFSETS]
description: Update the offsets gotten from the last probe sequesnce.
gcode:
    {% set svf = printer.save_variables.variables %}
    {% set tN = "t" + (tool_number | string) %}
    # Update the variables that hold the offsets
    {% set x_adjustment = (printer.tools_calibrate.last_x_result - svf.nudge_position_x|float) | round(3) %}
    {% set y_adjustment = (printer.tools_calibrate.last_y_result - svf.nudge_position_y|float) | round(3) %}
    {% set z_adjustment = (printer.tools_calibrate.last_z_result - svf.nudge_position_z|float) | round(3) %}
    SAVE_VARIABLE VARIABLE={tN}_offset_x VALUE={x_adjustment}
    SAVE_VARIABLE VARIABLE={tN}_offset_y VALUE={y_adjustment}
    SAVE_VARIABLE VARIABLE={tN}_offset_z VALUE={z_adjustment}
    # Show us the saved offsets
    RESPOND MSG="X_ADJUST={'+' if x_adjustment > 0 else ''}{x_adjustment} Y_ADJUST={'+' if y_adjustment > 0 else ''}{y_adjustment} Z_ADJUST={'+' if z_adjustment > 0 else ''}{z_adjustment} 
    RESPOND MSG="Offsets for {tN} updated to:"
[tools_calibrate]
# Nudge config
#
# These two values should be changed or checked.
#
# 'pin' should reference the pin used for Nudge.
pin: mcu:ENDSTOP_E
# 'spread' is the amount of X or Y motion used in the probing sequence.
# Think of it as the clearance from the center, to accomodate the pin's diameter and any
# initial starting-point inaccuracy.
# For larger pins (5mm), increase this to 3.5mm+.
#   Increase this and/or improve the accuracy of the starting point if the probe triggers too early.
#   Decrease this and/or improve the accuracy of the starting point if the motion
#     pushes your printer beyond the allowed travel amount.
spread: 3
#
# Config below is unlikely to need changes.
#
# 'lower_z' is the distance below the probe tip in Z, used to ensure a hit.
#   Increase this to have more of the nozzle hit during probing.
#   Values as low as 0.1mm may work, and will minimize the need for overtravel.
lower_z: 0.2
travel_speed: 100
speed: 2.5
lift_speed: 4
final_lift_z: 4
sample_retract_dist: 2
samples_tolerance: 0.05
samples: 1
samples_result: median
trigger_to_bottom_z: 3
# If using a built-in Z probe to find the Nudge pin top, reference it here.
# This is only relevant for the flipped configuration, to provide resistance to pushing, for Tap/Boop/Poke/etc.
# Most should leave this commented out.
#probe: probe

[gcode_macro NUDGE_TOOL_OFFSET]
gcode:
  NUDGE_MOVE_OVER_PROBE
  TOOL_LOCATE_SENSOR

[gcode_macro NUDGE_TOOL_OFFSETS]
gcode:
    T0
    M109 T0 S150  # Heat up as much as possible without oozing to account for any thermal deformations
    NUDGE_TOOL_OFFSET
    M104 T0 S0
    # Match your number of tools:
    #   [1, 2, 3] for a 4-head toolchanger.
    #   [1] for IDEX or Dual Gantry.
    {% for tool in [1] %}
        T{tool}
        M109 T{tool} S150
        NUDGE_MOVE_OVER_PROBE
        TOOL_CALIBRATE_TOOL_OFFSET
        M104 T{tool} S0
    {% endfor %}
    #NUDGE_SAVE_PARAMS_T1

# [gcode_macro NUDGE_NOZZLE_PROBE_OFFSET]
# gcode:    
#     NUDGE_MOVE_OVER_PROBE
#     # !!!
#     #M109 S150    
#     TOOL_LOCATE_SENSOR
#     TOOL_NUDGE_PROBE_OFFSET
#     M104 S0

[gcode_macro PRINT_TC]
gcode:
    RESPOND TYPE=echo MSG='{printer.toolchanger}'

[gcode_macro PRINT_TC_TOOL]
gcode: 
    RESPOND TYPE=echo MSG='{printer[printer.toolchanger.tool]}'

[gcode_macro NUDGE_PRINT_OFFSETS]
gcode:
    {% set tool = printer[printer.toolchanger.tool] %}
    {% set offsets = printer.gcode_move.homing_origin %}
    {% set offset_x = tool.gcode_x_offset %}
    {% set offset_y = tool.gcode_y_offset %}
    {% set offset_z = tool.gcode_z_offset %}
    RESPOND TYPE=echo MSG='Active: X:{offsets.x} Y:{offsets.y} Z:{offsets.z}'
    RESPOND TYPE=echo MSG='Configured: X:{offset_x} Y:{offset_y} Z:{offset_z}'


[gcode_macro NUDGE_PRINT_PROBE_RESULTS]
gcode:
    {% set probe_vars = printer["gcode_macro CALIBRATE_Z_OFFSET"] %}
    RESPOND TYPE=echo MSG='Tool 1 probed: Z:{probe_vars.t1_probed_z | default("never")}'
    RESPOND TYPE=echo MSG='Tool 0 probed: Z:{probe_vars.t0_probed_z | default("never")}'

    {% for tool in [0, 1] %}
      {% set key = "t" + (tool|string) + "_probed_z" %}
      {% set probed_z = probe_vars[key] %}
      {% if probed_z %}
        RESPOND TYPE=echo MSG='Tool {tool} probed: Z:{probed_z}'
      {% else %}
        RESPOND TYPE=echo MSG='Tool {tool} has not probed (looked up: {key})'
      {% endif %}
    {% endfor %}

[gcode_macro NUDGE_PRINT_ADJUSTMENTS]
gcode:
    {% set svf = printer.save_variables.variables %}
    {% for tool in [0, 1] %}
      {% set nudge_x = svf["t"+(tool|string)+"_offset_x"] |default(0)%}
      {% set nudge_y = svf["t"+(tool|string)+"_offset_y"] |default(0)%}
      {% set nudge_z = svf["t"+(tool|string)+"_offset_z"] |default(0)%}
      {% if nudge_x or nudge_y or nudge_z %}
        RESPOND TYPE=echo MSG='Tool {tool} nudge corrections: X:{nudge_x} Y:{nudge_y} Z:{nudge_z}'
      {% else %}
        RESPOND TYPE=echo MSG='Tool {tool} has no nudge corrections'
      {% endif %}
    {% endfor %}

    
# # !!! Wrong.
# [gcode_macro NUDGE_SAVE_PARAMS_T1]
# gcode:
#     {% set tool = printer[printer.toolchanger.tool] %}
#     {% set offset_x = tool.offset_x %}
#     {% set offset_y = tool.offset_y %}
#     {% set offset_z = tool.offset_z %}
#     SAVE_TOOL_PARAMETER TOOL=\'{tool}\' PARAMETER=params_gcode_x_offset VALUE={offset_x}
#     SAVE_TOOL_PARAMETER TOOL=\'{tool}\' PARAMETER=params_gcode_y_offset VALUE={offset_y}
#     SAVE_TOOL_PARAMETER TOOL=\'{tool}\' PARAMETER=params_gcode_z_offset VALUE={offset_z}
  
